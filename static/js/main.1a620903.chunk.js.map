{"version":3,"sources":["components/Slide.tsx","pages/AnonymousPage.tsx","pages/ContestantPage.tsx","sounds/model.ts","sounds/SoundBoard.tsx","pages/ModeratorPage.tsx","sounds/Sound.tsx","sounds/SoundMixer.tsx","pages/PresentationPage.tsx","firebase/FirebaseUser.ts","firebase/index.ts","MessageBus.ts","AppState.ts","App.tsx","pages/SplashPage.tsx","serviceWorker.ts","index.tsx"],"names":["Slide","observer","className","slide","alt","src","style","objectFit","maxWidth","maxHeight","useStyles","createUseStyles","container","flexGrow","flexDirection","alignItems","content","title","fontSize","fontWeight","textAlign","padding","registrationForm","display","AnonymousPage","appState","status","AnonymousRegistrationView","AnonymousActiveGameView","useActiveGameStyles","justifyContent","classes","currentQuestionId","userId","substr","isRegisteredPlayer","RegisteredWaitingView","RegistrationPage","registerUser","React","useState","playerName","setPlayerName","canSubmit","length","onSubmit","evt","preventDefault","type","placeholder","value","onChange","target","disabled","localPlayer","displayName","id","playerDetails","score","buzzer","fontVariant","ContestantPage","RegisteredContestantView","ActiveContestantView","contestantBuzzedIn","onClick","SoundMap","Right","Wrong","Waiting","SoundBoard","onPlaySound","Object","keys","map","sound","key","sounds","justifyItems","margin","slideButtons","marginBottom","players","player","width","color","minWidth","userModeratorPageStyles","gameActions","marginTop","playerActions","height","ModeratorPage","ModerateRegistrationView","ModerateActiveGameView","playerCandidates","isPlayer","toggleContestant","setAsPresenter","startGame","user","backToGameSettings","addPointsToPlayer","playSound","prevSlide","nextSlide","PlayerScore","onAddPoints","customScore","setCustomScore","Number","points","String","Sound","forwardRef","audioEl","createRef","stop","audio","current","pause","currentTime","assign","play","isPlaying","ref","preload","autoPlay","SoundMixer","props","reduce","agg","component","useCallback","x","forEach","name","isRequestedSound","Component","fontFamilies","currentSlide","playersList","marginRight","backgroundColor","isBuzzedInPlayer","borderRadius","fontFamily","playerId","replace","PresentationPage","buzzedPlayerId","currentQuestion","useEffect","keyPressHandler","console","log","document","addEventListener","removeEventListener","soundMixer","subscribeToSoundEvents","PlayersList","PlayerView","FirebaseUser","credentials","this","uid","_loginRequest","firebase","auth","signInAnonymously","then","catch","warn","initialized","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","MessageBus","_subscribers","_queue","firestore","collection","get","doc","delete","docs","topic","message","add","body","debug","handler","deleteAfterHandled","subscribers","where","onSnapshot","snap","docChanges","filter","data","error","push","_instance","AppState","bus","Instance","playerDocument","gameSessionDocument","observable","users","subscribe","setGameStatus","mode","updateGameSession","presenter","findIndex","initialize","reaction","initializePresenter","find","AnonymousUser","specialUserIds","moderator","includes","presenterInitialized","info","authenticate","initializeCurrentPlayer","initializeGameSession","initializeUsers","existingUser","runInAction","getUserDocument","JSON","stringify","alert","set","last_seen","Date","now","merge","clear","limit","activeSessionQuery","size","activeSessionId","session","update","freeze","role","computed","action","toJS","publish","Math","min","totalQuestions","max","existingIndex","slice","splice","routes","initializing","contestant","spectator","App","state","useLocalStore","View","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a620903.chunk.js","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface SlideProps {\n  className?: string;\n  slide: number;\n}\n\nexport const Slide = observer(({ className, slide }: SlideProps) => {\n  return (\n    <div className={className}>\n      <img\n        alt={`Slide${slide}.jpg`}\n        src={`/slides/Slide${slide}.jpg`}\n        style={{ objectFit: \"contain\", maxWidth: \"100%\", maxHeight: \"100%\" }}\n      />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { PageProps } from \"../model\";\nimport { observer } from \"mobx-react-lite\";\nimport { Slide } from \"../components/Slide\";\n\nconst useStyles = createUseStyles({\n  container: {\n    flexGrow: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  content: {\n    flexGrow: 1,\n    flexDirection: \"column\"\n  },\n  title: {\n    fontSize: \"200%\",\n    fontWeight: 800,\n    textAlign: \"center\",\n    padding: \"1em\"\n  },\n  registrationForm: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n});\n\nexport const AnonymousPage = observer(({ appState }: PageProps) =>\n  appState.status === \"registering\" ? (\n    <AnonymousRegistrationView appState={appState} />\n  ) : (\n    <AnonymousActiveGameView appState={appState} />\n  )\n);\n\nconst useActiveGameStyles = createUseStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  slide: {\n    maxHeight: \"100vh\",\n    maxWidth: \"100vw\"\n  }\n});\n\nconst AnonymousActiveGameView = observer(({ appState }: PageProps) => {\n  const classes = useActiveGameStyles();\n\n  return (\n    <div className={classes.container}>\n      <Slide className={classes.slide} slide={appState.currentQuestionId} />\n      <div>Game in progress...</div>\n\n      <small>\n        {appState.userId && <em>User ID: {appState.userId.substr(0, 5)}</em>}\n      </small>\n    </div>\n  );\n});\n\nconst AnonymousRegistrationView = observer(({ appState }: PageProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.title}>{appState.title}</div>\n      <div className={classes.content}>\n        {appState.isRegisteredPlayer ? (\n          <RegisteredWaitingView appState={appState} />\n        ) : (\n          <RegistrationPage appState={appState} />\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst RegistrationPage = ({ appState: { registerUser } }: PageProps) => {\n  const classes = useStyles();\n  const [playerName, setPlayerName] = React.useState(\"\");\n  const canSubmit = (playerName || \"\").length > 3;\n\n  return (\n    <div className={classes.container}>\n      <div>Please sign in:</div>\n      <form\n        className={classes.registrationForm}\n        onSubmit={evt => {\n          evt.preventDefault();\n\n          if (canSubmit) {\n            registerUser(playerName);\n          }\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"What's your name?\"\n          value={playerName}\n          onChange={evt => setPlayerName(evt.target.value)}\n        />\n        <button disabled={!canSubmit} className=\"btn btn-primary\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst RegisteredWaitingView = observer(\n  ({ appState: { localPlayer } }: PageProps) => (\n    <>\n      <div>Welcome, {localPlayer.displayName}!</div>\n      <div>The game will begin shortly...</div>\n      <small>\n        <em>User ID: {localPlayer.id.substr(0, 5)}</em>\n      </small>\n    </>\n  )\n);\n","import React from \"react\";\nimport { PageProps } from \"../model\";\nimport { createUseStyles } from \"react-jss\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = createUseStyles({\n  container: {\n    flexGrow: 1,\n    flexDirection: \"column\"\n  },\n  playerDetails: {\n    flexGrow: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  playerName: {\n    fontSize: \"200%\"\n  },\n  score: {\n    fontSize: \"150%\"\n  },\n  buzzer: {\n    flexGrow: 4,\n    fontVariant: \"all-small-caps\",\n    fontSize: \"400%\"\n  }\n});\n\nexport const ContestantPage = observer(({ appState }: PageProps) =>\n  appState.status === \"registering\" ? (\n    <RegisteredContestantView appState={appState} />\n  ) : (\n    <ActiveContestantView appState={appState} />\n  )\n);\n\nexport const RegisteredContestantView = observer(\n  ({ appState: { localPlayer, title } }: PageProps) => (\n    <>\n      <div>\n        Congratulations, {localPlayer.displayName}, you're a contestant on\n        <span>{title}</span>!\n      </div>\n      <div>Hold tight - the game will begin shortly!</div>\n    </>\n  )\n);\n\nexport const ActiveContestantView = observer(\n  ({ appState, appState: { localPlayer, contestantBuzzedIn } }: PageProps) => {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.playerDetails}>\n          <div className={classes.playerName}>{localPlayer.displayName}</div>\n          <div className={classes.score}>{localPlayer.score}</div>\n        </div>\n        <button\n          className={classes.buzzer + \" btn btn-secondary\"}\n          onClick={() => contestantBuzzedIn(localPlayer)}\n        >\n          Buzz\n        </button>\n        <small>\n          <em>User ID: {appState.userId}</em>\n        </small>\n      </div>\n    );\n  }\n);\n","export const SoundMap = {\n  Right: \"/sfx/right.mp3\",\n  Wrong: \"/sfx/wrong.mp3\",\n  Waiting: \"/sfx/theme.mp3\",\n  \"Time's Up\": \"/sfx/times-up.mp3\"\n};\n\nexport type SoundName = keyof typeof SoundMap;\n\nexport interface AudioPlayer {\n  play(): void;\n  stop(): void;\n  isPlaying(): boolean;\n}\n\nexport interface SoundMixerPlayer {\n  play(sound: SoundName): void;\n}\n","import React from \"react\";\nimport { SoundMap, SoundName } from \"./model\";\n\nexport interface SoundBoardProps {\n  onPlaySound(sound: SoundName): void;\n}\n\nexport const SoundBoard = ({ onPlaySound }: SoundBoardProps) => (\n  <div>\n    {(Object.keys(SoundMap) as any).map((sound: SoundName) => (\n      <button\n        key={sound}\n        className=\"btn btn-primary\"\n        onClick={() => onPlaySound(sound)}\n      >\n        {sound}\n      </button>\n    ))}\n  </div>\n);\n","import React, { useState } from \"react\";\nimport { Player, PageProps } from \"../model\";\nimport { SoundBoard } from \"../sounds/SoundBoard\";\nimport { observer } from \"mobx-react-lite\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  sounds: {\n    flexGrow: 2,\n    flexDirection: \"row\",\n    justifyItems: \"space-between\",\n\n    \"& .btn\": {\n      flexGrow: 1,\n      margin: \"0.5em\"\n    }\n  },\n\n  slideButtons: {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: \"0.5rem\",\n\n    \"& .btn\": {\n      padding: \"1em 1.5em\"\n    }\n  },\n\n  players: {\n    flexGrow: 3,\n    flexDirection: \"column\"\n  },\n\n  player: {\n    flexDirection: \"column\",\n    marginBottom: \"1rem\",\n\n    \"& .name\": {\n      flexGrow: 1,\n      fontWeight: 700,\n      fontSize: \"200%\"\n    },\n\n    \"& .score\": {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      width: \"30%\",\n      color: \"#1050db\",\n      fontWeight: 600\n    },\n\n    \"& .scoreActions\": {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n\n    \"& .scoreActions .btn\": {\n      padding: \"2em 1em\",\n      minWidth: \"5em\"\n    },\n\n    \"& .scoreActions input\": {\n      width: \"3em\"\n    }\n  }\n});\n\nconst userModeratorPageStyles = createUseStyles({\n  gameActions: {\n    marginTop: \"2em\"\n  },\n  player: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  playerName: {\n    flexGrow: 1\n  },\n  playerActions: {\n    \"& img\": {\n      width: \"1em\",\n      height: \"1em\"\n    }\n  }\n});\n\nexport const ModeratorPage = observer(({ appState }: PageProps) => {\n  return appState.status === \"registering\" ? (\n    <ModerateRegistrationView appState={appState} />\n  ) : (\n    <ModerateActiveGameView appState={appState} />\n  );\n});\n\nconst ModerateRegistrationView = observer(\n  ({\n    appState: {\n      playerCandidates,\n      isPlayer,\n      toggleContestant,\n      setAsPresenter,\n      startGame\n    }\n  }: PageProps) => {\n    const classes = userModeratorPageStyles();\n\n    return (\n      <>\n        <h3>Select Contestants</h3>\n        <ul className=\"list-group \">\n          {playerCandidates.map(user => (\n            <li\n              key={user.id}\n              className={\n                \"list-group-item list-group-item-action \" +\n                (isPlayer(user) ? \" active\" : \"\")\n              }\n            >\n              <div className={classes.player}>\n                <div\n                  className={classes.playerName}\n                  onClick={() => toggleContestant(user)}\n                >\n                  {user.displayName} <small>({user.id.substr(0, 5)})</small>\n                </div>\n                <div className={classes.playerActions}>\n                  <button\n                    onClick={() => setAsPresenter(user)}\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                  >\n                    <img alt=\"Set as Presenter\" src=\"/presenter.png\" />\n                  </button>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n\n        <div className={classes.gameActions}>\n          <button className=\"btn btn-primary\" onClick={() => startGame()}>\n            Start Game!\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nconst ModerateActiveGameView = observer(\n  ({\n    appState: {\n      backToGameSettings,\n      players,\n      addPointsToPlayer,\n      playSound,\n      prevSlide,\n      nextSlide\n    }\n  }: PageProps) => {\n    const classes = useStyles();\n\n    return (\n      <>\n        <div className={classes.players}>\n          {players.map(player => (\n            <PlayerScore\n              key={player.id}\n              player={player}\n              onAddPoints={addPointsToPlayer}\n            />\n          ))}\n        </div>\n\n        <div className={classes.slideButtons}>\n          <button className=\"btn btn-secondary\" onClick={prevSlide}>\n            Prev Slide\n          </button>\n          <button className=\"btn btn-secondary\" onClick={nextSlide}>\n            Next Slide\n          </button>\n        </div>\n\n        <div className={classes.sounds}>\n          <SoundBoard onPlaySound={playSound} />\n        </div>\n\n        <div>\n          <button\n            onClick={backToGameSettings}\n            type=\"button\"\n            className=\"btn btn-warning\"\n          >\n            Back to Game Settings\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\ninterface PlayerScoreProps {\n  player: Player;\n  onAddPoints(player: Player, points: number): void;\n}\n\nconst PlayerScore = observer(({ player, onAddPoints }: PlayerScoreProps) => {\n  const classes = useStyles();\n  const [customScore, setCustomScore] = useState(0);\n\n  return (\n    <div className={classes.player}>\n      <div className=\"details\">\n        <div className=\"name\">{player.displayName}</div>\n        <div className=\"score\">\n          <div>{player.score}</div>\n          <div>\n            <form\n              onSubmit={evt => {\n                onAddPoints(player, customScore);\n                setCustomScore(0);\n                evt.preventDefault();\n              }}\n            >\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={customScore}\n                  onChange={evt => setCustomScore(Number(evt.target.value))}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-secondary addPoints\"\n                  >\n                    Add\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"scoreActions\">\n        {[5, 25, 50, 100].map(points => (\n          <button\n            key={String(points)}\n            className=\"btn btn-secondary addPoints\"\n            onClick={() => onAddPoints(player, points)}\n          >\n            {points}\n          </button>\n        ))}\n        <div className=\"addPoints\"></div>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { AudioPlayer } from \"./model\";\n\nexport const Sound = React.forwardRef<AudioPlayer, { src: string }>(\n  ({ src }, player) => {\n    const audioEl = React.createRef<HTMLAudioElement>();\n\n    const isPlaying = () => {\n      const audio = audioEl.current;\n      return audio && audio.currentTime > 0;\n    };\n\n    const stop = () => {\n      const audio = audioEl.current;\n      audio.pause();\n      audio.currentTime = 0;\n    };\n\n    const play = () => {\n      const audio = audioEl.current;\n\n      if (audio) {\n        stop();\n        audio.play();\n      }\n    };\n\n    Object.assign(player, {\n      current: { stop, play, isPlaying }\n    });\n\n    return <audio ref={audioEl} preload=\"auto\" autoPlay={false} src={src} />;\n  }\n);\n","import React from \"react\";\nimport { SoundMap, SoundName, SoundMixerPlayer, AudioPlayer } from \"./model\";\nimport { Sound } from \"./Sound\";\n\nexport interface SoundMixerProps {\n  onPlaySound(sound: SoundName): void;\n}\n\ntype SoundMixerSounds = {\n  [key in SoundName]: AudioPlayer & { component: React.FunctionComponent };\n};\n\nexport const SoundMixer = React.forwardRef<SoundMixerPlayer>((props, ref) => {\n  const [sounds] = React.useState<SoundMixerSounds>(() =>\n    (Object.keys(SoundMap) as any).reduce(\n      (agg: SoundMixerSounds, sound: SoundName) => {\n        const ref = React.createRef<AudioPlayer>();\n        agg[sound] = {\n          play: () => ref.current && ref.current.play(),\n          stop: () => ref.current && ref.current.stop(),\n          isPlaying: () => ref.current && ref.current.isPlaying(),\n          component: () => <Sound ref={ref} src={SoundMap[sound]} />\n        };\n        return agg;\n      },\n      {} as SoundMixerSounds\n    )\n  );\n\n  const play = React.useCallback(\n    (sound: SoundName) =>\n      Object.keys(sounds)\n        .map(x => x as SoundName)\n        .forEach(name => {\n          const isPlaying = sounds[name].isPlaying();\n          const isRequestedSound = name === sound;\n\n          if (isPlaying) {\n            sounds[name].stop();\n\n            if (isRequestedSound) {\n              // stop - don't play\n              return;\n            }\n          }\n\n          if (isRequestedSound) {\n            sounds[sound].play();\n          }\n        }),\n    [sounds]\n  );\n\n  Object.assign(ref, {\n    current: { play }\n  });\n\n  return (\n    <>\n      {Object.keys(sounds)\n        .map(x => x as SoundName)\n        .map(sound => {\n          const Component = sounds[sound].component;\n          return <Component key={sound} />;\n        })}\n    </>\n  );\n});\n","import React from \"react\";\nimport { Player, PageProps } from \"../model\";\nimport { observer } from \"mobx-react-lite\";\nimport { createUseStyles } from \"react-jss\";\nimport { SoundMixer, SoundMixerPlayer } from \"../sounds\";\nimport { Slide as CurrentSlide } from \"../components/Slide\";\n\nconst fontFamilies = [\n  \"Cedarville Cursive\",\n  \"Permanent Marker\",\n  \"Reenie Beanie\",\n  \"Rock Salt\"\n  //\"Ruge Boogie\"\n];\n\nconst getPlayerFontSize = (props: { player: Player }) => {\n  const name = (props && props.player && props.player.displayName) || \"x\";\n  return `${300 - name.length * 20}%`;\n};\n\nconst getPlayerFontFamily = (props: { player: Player }) => {\n  const playerId = props && props.player && props.player.id;\n\n  if (playerId == null) {\n    return null;\n  }\n\n  const id = Number(playerId.replace(/\\D/g, \"\"));\n  return fontFamilies[id % fontFamilies.length];\n};\n\nconst useStyles = createUseStyles({\n  container: {\n    flexDirection: \"row\",\n    flexGrow: 1\n  },\n  currentSlide: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"calc(100% - 15rem)\"\n  },\n  playersList: {\n    width: \"14rem\",\n    marginRight: \"1rem\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\"\n  },\n  player: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: (props: PlayerViewProps) =>\n      props && props.isBuzzedInPlayer ? \"gold\" : \"#060CE9\",\n    borderRadius: \"10%\",\n    padding: \"1em 2em\",\n    color: (props: PlayerViewProps) =>\n      props && props.isBuzzedInPlayer ? \"#060CE9\" : \"#fff\",\n\n    \"&.buzzed\": {\n      backgroundColor: \"gold\",\n      color: \"#060CE9\"\n    },\n\n    \"& .name\": {\n      fontFamily: getPlayerFontFamily,\n      fontSize: getPlayerFontSize\n    },\n\n    \"& .score\": {\n      fontSize: \"150%\"\n    }\n  }\n});\n\nexport const PresentationPage = observer(({ appState }: PageProps) => {\n  const classes = useStyles();\n  const {\n    buzzedPlayerId,\n    players,\n    currentQuestionId: currentQuestion,\n    prevSlide,\n    nextSlide\n  } = appState;\n\n  React.useEffect(() => {\n    const keyPressHandler = ({ key }: { key: string }): any => {\n      console.log(\"key: \", key);\n      switch (key) {\n        case \"ArrowLeft\":\n          prevSlide();\n          break;\n        case \"ArrowRight\":\n          nextSlide();\n          break;\n      }\n    };\n\n    document.addEventListener(\"keydown\", keyPressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPressHandler);\n    };\n  }, [nextSlide, prevSlide]);\n\n  const soundMixer = React.createRef<SoundMixerPlayer>();\n\n  React.useEffect(() => {\n    appState.subscribeToSoundEvents(sound => {\n      soundMixer.current && soundMixer.current.play(sound);\n    });\n  }, [appState, soundMixer]);\n\n  return (\n    <div className={classes.container}>\n      <CurrentSlide className={classes.currentSlide} slide={currentQuestion} />\n      <PlayersList players={players} buzzedPlayerId={buzzedPlayerId} />\n      <SoundMixer ref={soundMixer} />\n    </div>\n  );\n});\n\ninterface PlayersListProps {\n  players: Player[];\n  buzzedPlayerId: string;\n}\nconst PlayersList = observer(\n  ({ players, buzzedPlayerId }: PlayersListProps) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.playersList}>\n        {players.map(player => (\n          <PlayerView\n            key={player.id}\n            player={player}\n            isBuzzedInPlayer={player.id === buzzedPlayerId}\n          />\n        ))}\n      </div>\n    );\n  }\n);\n\ninterface PlayerViewProps {\n  player: Player;\n  isBuzzedInPlayer: boolean;\n}\nconst PlayerView = observer(({ player, isBuzzedInPlayer }: PlayerViewProps) => {\n  const classes = useStyles({ player });\n  return (\n    <div className={classes.player + (isBuzzedInPlayer ? \" buzzed\" : \"\")}>\n      <div className=\"name\">{player.displayName}</div>\n      <div className=\"score\">{player.score}</div>\n    </div>\n  );\n});\n","import firebase from \"firebase\";\n\nexport class FirebaseUser {\n  constructor(readonly credentials: firebase.auth.UserCredential) {}\n\n  get user() {\n    return this.credentials && this.credentials.user;\n  }\n\n  get id(): string {\n    return this.user && this.user.uid;\n  }\n\n  get displayName(): string {\n    return this.user && this.user.displayName;\n  }\n\n  private static _loginRequest: Promise<FirebaseUser> = null;\n\n  static authenticate(): Promise<FirebaseUser> {\n    if (this._loginRequest == null) {\n      this._loginRequest = firebase\n        .auth()\n        .signInAnonymously()\n        .then(credentials => new FirebaseUser(credentials));\n\n      this._loginRequest.catch(() =>\n        console.warn(\"Unable to authenticate as anonymous user\")\n      );\n    }\n\n    return this._loginRequest;\n  }\n}\n","import firebase from \"firebase\";\n\nlet initialized = false;\n\nfunction initializeFirebase(): void {\n  if (initialized) {\n    return;\n  }\n\n  initialized = true;\n\n  firebase.initializeApp({\n    apiKey: \"AIzaSyCIw3Il1zFwzWQNONEPpNB5ydnTIYy3mso\",\n    authDomain: \"quizshow-bbe75.firebaseapp.com\",\n    databaseURL: \"https://quizshow-bbe75.firebaseio.com\",\n    projectId: \"quizshow-bbe75\",\n    storageBucket: \"quizshow-bbe75.appspot.com\",\n    messagingSenderId: \"770561928281\",\n    appId: \"1:770561928281:web:66942fd2a6b357f9b15548\",\n    measurementId: \"G-BST52BZV8G\"\n  });\n\n  firebase.analytics();\n}\n\ninitializeFirebase();\n\nexport * from \"./FirebaseUser\";\nexport default firebase;\n","import firebase from \"./firebase\";\n\ntype MessageHandler<T = any> = (message: T) => void;\n\ninterface Message<T = any> {\n  topic: string;\n  body: T;\n}\n\nexport class MessageBus {\n  async clear() {\n    await (await this._queue.get()).docs.map(doc =>\n      this._queue.doc(doc.id).delete()\n    );\n  }\n  private readonly _subscribers: { [key: string]: MessageHandler[] } = {};\n  private readonly _queue: firebase.firestore.CollectionReference;\n\n  constructor() {\n    this._queue = firebase.firestore().collection(\"messages\");\n  }\n\n  publish<T>(topic: string, message: T) {\n    this._queue.add({ topic, body: message } as Message);\n    console.debug(`Published ${topic}: `, message);\n  }\n\n  subscribe<T>(\n    topic: string,\n    handler: MessageHandler<T>,\n    deleteAfterHandled = false\n  ) {\n    let subscribers = this._subscribers[topic];\n\n    if (subscribers == null) {\n      subscribers = this._subscribers[topic] = [];\n\n      this._queue.where(\"topic\", \"==\", topic).onSnapshot(snap => {\n        snap\n          .docChanges()\n          .filter(x => x.type === \"added\")\n          .forEach(x => {\n            const { body } = x.doc.data();\n\n            this._subscribers[topic].forEach(handler => {\n              try {\n                handler(body);\n              } catch (error) {\n                console.warn(\"Error: \", error);\n              }\n            });\n\n            if (deleteAfterHandled) {\n              this._queue.doc(x.doc.id).delete();\n            }\n          });\n      });\n    }\n\n    subscribers.push(handler);\n  }\n\n  private static _instance: MessageBus;\n\n  public static get Instance() {\n    return (this._instance = this._instance || new MessageBus());\n  }\n}\n","import {\n  observable,\n  action,\n  computed,\n  runInAction,\n  toJS,\n  reaction\n} from \"mobx\";\nimport { Player, PlayerMode } from \"./model\";\nimport firebase, { FirebaseUser } from \"./firebase\";\nimport { MessageBus } from \"./MessageBus\";\nimport { SoundName } from \"./sounds\";\n\ntype GameStatus = \"initializing\" | \"registering\" | \"active\" | \"done\";\n\ninterface BuzzerMessage {\n  playerId: string;\n}\n\ninterface PlaySoundMessage {\n  sound: SoundName;\n}\n\nexport class AppState {\n  static readonly AnonymousUser: Player = Object.freeze({\n    id: \"-1\",\n    displayName: \"Anonymous\",\n    role: \"spectator\"\n  });\n\n  private readonly bus = MessageBus.Instance;\n  private playerDocument: firebase.firestore.DocumentReference = null;\n  private gameSessionDocument: firebase.firestore.DocumentReference = null;\n\n  readonly players = observable<Player>([]);\n  readonly users = observable<Player>([]);\n\n  @observable userId: string = null;\n  @observable presenter: string = null;\n  @observable moderator: string = null;\n  @observable title: string = \"JavaScript Quiz Show\";\n  @observable localPlayer: Player = AppState.AnonymousUser;\n  @observable buzzedPlayerId: string = null;\n  @observable currentQuestionId: number = 1;\n  @observable totalQuestions: number = 36;\n  @observable status: GameStatus = \"initializing\";\n  @observable private presenterInitialized = false;\n\n  @computed get buzzedPlayer(): Player {\n    return this.players.find(x => x.id === this.buzzedPlayerId);\n  }\n\n  @computed get isRegisteredPlayer(): boolean {\n    return (\n      this.localPlayer &&\n      this.localPlayer.id !== AppState.AnonymousUser.id &&\n      this.localPlayer.displayName != null\n    );\n  }\n\n  @computed get playerCandidates(): Player[] {\n    const specialUserIds = [this.moderator];\n\n    return this.users\n      .filter(x => !!x)\n      .filter(({ displayName }) => !!displayName)\n      .filter(({ id }) => !specialUserIds.includes(id))\n      .filter(({ id }) => id !== this.localPlayer.id);\n  }\n\n  @computed\n  get mode(): PlayerMode {\n    if (this.status === \"initializing\") {\n      return \"initializing\";\n    }\n\n    if (this.localPlayer.id === this.presenter) {\n      return \"presenter\";\n    }\n\n    if (this.localPlayer.id === this.moderator) {\n      return \"moderator\";\n    }\n\n    if (this.players.findIndex(x => x.id === this.localPlayer.id) >= 0) {\n      return \"contestant\";\n    }\n\n    return \"spectator\";\n  }\n\n  constructor() {\n    this.initialize();\n\n    reaction(\n      () => this.mode,\n      mode => {\n        if (mode === \"presenter\") {\n          this.initializePresenter();\n        }\n      }\n    );\n  }\n\n  @action\n  readonly addPointsToPlayer = (player: Player, points: number) => {\n    if (this.mode !== \"moderator\") return;\n    player.score = (player.score || 0) + points;\n    this.updateGameSession({ players: toJS(this.players) });\n  };\n\n  @action\n  readonly contestantBuzzedIn = (player: Player) => {\n    if (player.id === AppState.AnonymousUser.id) return;\n    this.bus.publish<BuzzerMessage>(\"buzzer\", { playerId: player.id });\n  };\n\n  @action\n  readonly playSound = (sound: SoundName) => {\n    this.bus.publish<PlaySoundMessage>(\"play_sound\", { sound });\n  };\n\n  @action\n  readonly nextSlide = () => {\n    if (this.mode !== \"moderator\" && this.mode !== \"presenter\") return;\n    const currentQuestionId = Math.min(\n      this.totalQuestions,\n      this.currentQuestionId + 1\n    );\n    this.updateGameSession({ buzzedPlayerId: null, currentQuestionId });\n  };\n\n  @action\n  readonly prevSlide = () => {\n    if (this.mode !== \"moderator\" && this.mode !== \"presenter\") return;\n    const currentQuestionId = Math.max(1, this.currentQuestionId - 1);\n    this.updateGameSession({ currentQuestionId });\n  };\n\n  @action\n  readonly registerUser = (displayName: string) => {\n    this.playerDocument.set({ displayName } as Player, {\n      merge: true\n    });\n  };\n\n  readonly subscribeToSoundEvents = (handler: (sound: SoundName) => void) =>\n    this.bus.subscribe<PlaySoundMessage>(\n      \"play_sound\",\n      ({ sound }) => handler(sound),\n      true\n    );\n\n  @action\n  readonly toggleContestant = (player: Player) => {\n    if (this.mode !== \"moderator\") return;\n\n    const existingIndex = this.players.findIndex(x => x.id === player.id);\n\n    let players = this.players.slice();\n\n    if (existingIndex > -1) {\n      players.splice(existingIndex, 1);\n    } else {\n      players.push({ ...player, score: 0 });\n    }\n\n    this.players.replace(players);\n\n    this.updateGameSession({ players: toJS(players) as any });\n  };\n\n  readonly backToGameSettings = () => this.setGameStatus(\"registering\");\n\n  readonly setGameStatus = (status: GameStatus) => {\n    if (this.mode !== \"moderator\") return;\n    this.updateGameSession({ status });\n  };\n  readonly setAsPresenter = (player: Player) => {\n    if (this.mode !== \"moderator\") return;\n    this.updateGameSession({ presenter: player.id });\n  };\n\n  readonly startGame = () => this.updateGameSession({ status: \"active\" });\n\n  readonly isPlayer = (player: Player) =>\n    player && this.players.findIndex(x => x.id === player.id) >= 0;\n\n  private initializePresenter() {\n    if (this.presenterInitialized) return;\n\n    this.presenterInitialized = true;\n\n    this.bus.subscribe<BuzzerMessage>(\"buzzer\", ({ playerId }) => {\n      if (playerId === AppState.AnonymousUser.id) return;\n\n      if (this.buzzedPlayerId === null) {\n        this.updateGameSession({ buzzedPlayerId: playerId });\n      } else if (this.buzzedPlayerId === playerId) {\n        // you already buzzed in!!\n      } else {\n        console.info(`Player ${playerId} buzzed in too late!`);\n      }\n    });\n  }\n\n  private async initialize() {\n    const user = await FirebaseUser.authenticate();\n    this.userId = user.id;\n\n    console.debug(`Authenticated user ${this.userId}`);\n\n    this.initializeCurrentPlayer();\n\n    this.initializeGameSession();\n\n    this.initializeUsers();\n  }\n\n  private initializeUsers() {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .onSnapshot(doc => {\n        doc.docChanges().forEach(({ doc }) => {\n          const existingUser = this.users.find(x => x.id === doc.id);\n\n          runInAction(() => {\n            if (existingUser) {\n              Object.assign(existingUser, doc.data());\n            } else {\n              this.users.push(doc.data() as Player);\n            }\n          });\n        });\n      });\n  }\n\n  private initializeCurrentPlayer() {\n    this.playerDocument = getUserDocument(this.userId);\n\n    this.playerDocument.onSnapshot(\n      doc => {\n        const player = doc.data() as Player;\n\n        if (player == null) {\n          console.info(`Registering as new player...`);\n          return;\n        }\n\n        console.debug(`Found existing player: ${JSON.stringify(player)}`);\n\n        runInAction(() => {\n          if (this.localPlayer.id === player.id) {\n            Object.assign(this.localPlayer, player);\n          } else {\n            this.localPlayer = player;\n          }\n        });\n      },\n      error => alert(`Error retrieving user info: ${error}`)\n    );\n\n    this.playerDocument.set(\n      { id: this.userId, last_seen: Date.now() } as Player & {\n        last_seen: number;\n      },\n      {\n        merge: true\n      }\n    );\n  }\n\n  private async initializeGameSession() {\n    this.bus.clear();\n\n    const activeSessionQuery = await firebase\n      .firestore()\n      .collection(`sessions`)\n      .limit(1)\n      .get();\n\n    if (activeSessionQuery.size === 0) {\n      alert(\"Couldn't find an active session!\");\n      return;\n    }\n\n    const activeSessionId = activeSessionQuery.docs[0].id;\n\n    this.gameSessionDocument = firebase\n      .firestore()\n      .doc(`sessions/${activeSessionId}`);\n\n    this.gameSessionDocument.onSnapshot(\n      doc => {\n        const session = doc.data();\n\n        if (session == null) {\n          console.info(`Ignoring null session (this should never happen...)`);\n          return;\n        }\n\n        runInAction(() => {\n          const { players, ...props } = session;\n\n          if (players) {\n            this.players.replace(players);\n          }\n\n          Object.assign(this, props);\n        });\n      },\n      error => alert(`Error retrieving session: ${error}`)\n    );\n  }\n\n  private updateGameSession(update: Partial<AppState>): void {\n    this.gameSessionDocument.set(update, {\n      merge: true\n    });\n  }\n}\n\nconst getUserDocument = (userId: string) =>\n  firebase.firestore().doc(`users/${userId}`);\n","import React, { FunctionComponent } from \"react\";\nimport { AnonymousPage } from \"./pages/AnonymousPage\";\nimport { ContestantPage } from \"./pages/ContestantPage\";\nimport { ModeratorPage } from \"./pages/ModeratorPage\";\nimport { PresentationPage } from \"./pages/PresentationPage\";\nimport { SplashPage } from \"./pages/SplashPage\";\nimport { AppState } from \"./AppState\";\nimport { useLocalStore, observer } from \"mobx-react-lite\";\nimport { PageProps, PlayerMode } from \"./model\";\n\nconst routes: {\n  [key in PlayerMode]: FunctionComponent<PageProps>;\n} = {\n  initializing: SplashPage,\n  contestant: ContestantPage,\n  moderator: ModeratorPage,\n  presenter: PresentationPage,\n  spectator: AnonymousPage\n};\n\nconst App = observer(() => {\n  const state = useLocalStore(() => new AppState());\n  const View = routes[state.mode];\n\n  return <View appState={state} />;\n});\n\nexport default App;\n","import React from \"react\";\n\nexport const SplashPage = () => (\n  <div id=\"splash\">\n    <div>\n      <h1>The JavaScript Quiz Show</h1>\n    </div>\n    <div>\n      <sub>by Jess Chadwick</sub>\n    </div>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}