{"version":3,"sources":["pages/AnonymousPage.tsx","pages/ContestantPage.tsx","sounds/model.ts","sounds/SoundBoard.tsx","pages/ModeratorPage.tsx","sounds/Sound.tsx","sounds/SoundMixer.tsx","pages/PresentationPage.tsx","firebase/FirebaseUser.ts","firebase/index.ts","MessageBus.ts","AppState.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","createUseStyles","container","flexDirection","alignItems","content","flexGrow","title","fontSize","fontWeight","textAlign","AnonymousPage","observer","appState","status","AnonymousRegistrationView","AnonymousActiveGameView","isRegisteredPlayer","registerUser","localPlayer","classes","React","useState","playerName","setPlayerName","canSubmit","length","className","displayName","onSubmit","evt","preventDefault","type","placeholder","value","onChange","target","disabled","playerDetails","justifyContent","score","buzzer","fontVariant","ContestantPage","RegisteredContestantView","ActiveContestantView","contestantBuzzedIn","onClick","userId","SoundMap","Right","Wrong","Waiting","SoundBoard","onPlaySound","Object","keys","map","sound","key","sounds","justifyItems","margin","slideButtons","marginBottom","padding","players","player","width","color","minWidth","ModeratorPage","ModerateRegistrationView","ModerateActiveGameView","playerCandidates","isPlayer","toggleContestant","startGame","user","id","substr","addPointsToPlayer","playSound","prevSlide","nextSlide","PlayerScore","onAddPoints","customScore","setCustomScore","Number","points","String","Sound","forwardRef","src","audioEl","createRef","stop","audio","current","pause","currentTime","assign","play","isPlaying","ref","preload","autoPlay","SoundMixer","props","reduce","agg","component","useCallback","x","forEach","name","isRequestedSound","Component","fontFamilies","currentSlide","playersList","backgroundColor","isBuzzedInPlayer","borderRadius","fontFamily","playerId","replace","PresentationPage","buzzedPlayerId","currentQuestion","currentQuestionId","useEffect","keyPressHandler","console","log","document","addEventListener","removeEventListener","soundMixer","subscribeToSoundEvents","CurrentSlide","slide","PlayersList","alt","style","objectFit","PlayerView","FirebaseUser","credentials","this","uid","_loginRequest","firebase","auth","signInAnonymously","then","catch","warn","initialized","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","MessageBus","_subscribers","_queue","firestore","collection","get","doc","delete","docs","topic","message","add","body","debug","handler","deleteAfterHandled","subscribers","where","onSnapshot","snap","docChanges","filter","data","error","push","_instance","AppState","bus","Instance","playerDocument","gameSessionDocument","observable","users","subscribe","updateGameSession","findIndex","initialize","reaction","mode","initializePresenter","find","AnonymousUser","specialUserIds","presenter","moderator","includes","presenterInitialized","info","authenticate","initializeCurrentPlayer","initializeGameSession","initializeUsers","existingUser","runInAction","getUserDocument","set","merge","JSON","stringify","alert","clear","limit","activeSessionQuery","size","activeSessionId","session","update","freeze","role","computed","action","toJS","publish","Math","min","totalQuestions","max","existingIndex","slice","splice","routes","contestant","spectator","App","state","useLocalStore","View","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8PAKMA,EAAYC,YAAgB,CAChCC,UAAW,CACTC,cAAe,SACfC,WAAY,UAEdC,QAAS,CACPF,cAAe,SACfG,SAAU,GAEZC,MAAO,CACLD,SAAU,EACVE,SAAU,OACVC,WAAY,IACZC,UAAW,YAIFC,EAAgBC,aAAS,gBAAGC,EAAH,EAAGA,SAAH,MAChB,gBAApBA,EAASC,OACP,kBAACC,EAAD,CAA2BF,SAAUA,IAErC,kBAACG,EAAD,SAIEA,EAA0BJ,aAAS,kBAAM,uDAEzCG,EAA4BH,aAChC,YAEkB,IAAD,IADfC,SAAYN,EACG,EADHA,MAAOU,EACJ,EADIA,mBAAoBC,EACxB,EADwBA,aAAcC,EACtC,EADsCA,YAE/CC,EAAUpB,IADD,EAEqBqB,IAAMC,SAAS,IAFpC,mBAERC,EAFQ,KAEIC,EAFJ,KAGTC,GAAaF,GAAc,IAAIG,OAAS,EAE9C,OACE,yBAAKC,UAAWP,EAAQlB,WACtB,yBAAKyB,UAAWP,EAAQb,OAAQA,GAChC,yBAAKoB,UAAWP,EAAQf,SACrBY,EACC,6BACE,yCAAeE,EAAYS,YAA3B,KACA,gEAGF,oCACE,gDACA,0BACEC,SAAU,SAAAC,GACRA,EAAIC,iBAEAN,GACFP,EAAaK,KAIjB,2BACES,KAAK,OACLC,YAAY,oBACZC,MAAOX,EACPY,SAAU,SAAAL,GAAG,OAAIN,EAAcM,EAAIM,OAAOF,UAE5C,4BAAQG,UAAWZ,EAAWE,UAAU,mBAAxC,mBC9DV3B,EAAYC,YAAgB,CAChCC,UAAW,CACTI,SAAU,EACVH,cAAe,UAEjBmC,cAAe,CACbhC,SAAU,EACVH,cAAe,SACfC,WAAY,SACZmC,eAAgB,gBAElBhB,WAAY,CACVf,SAAU,QAEZgC,MAAO,CACLhC,SAAU,QAEZiC,OAAQ,CACNnC,SAAU,EACVoC,YAAa,iBACblC,SAAU,UAIDmC,EAAiB/B,aAAS,gBAAGC,EAAH,EAAGA,SAAH,MACjB,gBAApBA,EAASC,OACP,kBAAC8B,EAAD,CAA0B/B,SAAUA,IAEpC,kBAACgC,EAAD,CAAsBhC,SAAUA,OAIvB+B,EAA2BhC,aACtC,oBAAGC,SAAYM,EAAf,EAAeA,YAAaZ,EAA5B,EAA4BA,MAA5B,OACE,oCACE,iDACoBY,EAAYS,YADhC,2BAEE,8BAAOrB,GAFT,KAIA,8EAKOsC,EAAuBjC,aAClC,YAA6E,IAA1EC,EAAyE,EAAzEA,SAAyE,IAA/DA,SAAYM,EAAmD,EAAnDA,YAAa2B,EAAsC,EAAtCA,mBAC9B1B,EAAUpB,IAEhB,OACE,yBAAK2B,UAAWP,EAAQlB,WACtB,yBAAKyB,UAAWP,EAAQkB,eACtB,yBAAKX,UAAWP,EAAQG,YAAaJ,EAAYS,aACjD,yBAAKD,UAAWP,EAAQoB,OAAQrB,EAAYqB,QAE9C,4BACEb,UAAWP,EAAQqB,OAAS,qBAC5BM,QAAS,kBAAMD,EAAmB3B,KAFpC,QAMA,+BACE,wCAAcN,EAASmC,aClEpBC,EAAW,CACtBC,MAAO,iBACPC,MAAO,iBACPC,QAAS,iBACT,YAAa,qBCGFC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACxB,6BACIC,OAAOC,KAAKP,GAAkBQ,KAAI,SAACC,GAAD,OAClC,4BACEC,IAAKD,EACL/B,UAAU,kBACVoB,QAAS,kBAAMO,EAAYI,KAE1BA,QCTH1D,EAAYC,YAAgB,CAChC2D,OAAQ,CACNtD,SAAU,EACVH,cAAe,MACf0D,aAAc,gBAEd,SAAU,CACRvD,SAAU,EACVwD,OAAQ,UAIZC,aAAc,CACZzD,SAAU,EACVH,cAAe,MACfoC,eAAgB,gBAChByB,aAAc,SAEd,SAAU,CACRC,QAAS,cAIbC,QAAS,CACP5D,SAAU,EACVH,cAAe,UAGjBgE,OAAQ,CACNhE,cAAe,SACf6D,aAAc,OAEd,UAAW,CACT1D,SAAU,EACVG,WAAY,IACZD,SAAU,QAGZ,WAAY,CACVL,cAAe,SACfoC,eAAgB,SAChB6B,MAAO,MACPC,MAAO,UACP5D,WAAY,KAGd,kBAAmB,CACjBN,cAAe,MACfoC,eAAgB,iBAGlB,uBAAwB,CACtB0B,QAAS,UACTK,SAAU,OAGZ,wBAAyB,CACvBF,MAAO,UAKAG,EAAgB3D,aAAS,YAA8B,IAA3BC,EAA0B,EAA1BA,SACvC,MAA2B,gBAApBA,EAASC,OACd,kBAAC0D,EAAD,CAA0B3D,SAAUA,IAEpC,kBAAC4D,EAAD,CAAwB5D,SAAUA,OAIhC2D,EAA2B5D,aAC/B,oBACEC,SAAY6D,EADd,EACcA,iBAAkBC,EADhC,EACgCA,SAAUC,EAD1C,EAC0CA,iBAAkBC,EAD5D,EAC4DA,UAD5D,OAGE,oCACE,kDACA,wBAAIlD,UAAU,cACX+C,EAAiBjB,KAAI,SAAAqB,GAAI,OACxB,wBACEnB,IAAKmB,EAAKC,GACVpD,UACE,2CACCgD,EAASG,GAAQ,UAAY,IAEhC/B,QAAS,kBAAM6B,EAAiBE,KAE/BA,EAAKlD,YARR,IAQqB,mCAASkD,EAAKC,GAAGC,OAAO,EAAG,GAA3B,UAKzB,6BACE,4BAAQrD,UAAU,kBAAkBoB,QAAS,kBAAM8B,MAAnD,oBAQFJ,EAAyB7D,aAC7B,YAEkB,IAAD,IADfC,SAAYqD,EACG,EADHA,QAASe,EACN,EADMA,kBAAmBC,EACzB,EADyBA,UAAWC,EACpC,EADoCA,UAAWC,EAC/C,EAD+CA,UAExDhE,EAAUpB,IAEhB,OACE,oCACE,yBAAK2B,UAAWP,EAAQ8C,SACrBA,EAAQT,KAAI,SAAAU,GAAM,OACjB,kBAACkB,EAAD,CACE1B,IAAKQ,EAAOY,GACZZ,OAAQA,EACRmB,YAAaL,QAKnB,yBAAKtD,UAAWP,EAAQ2C,cACtB,4BAAQpC,UAAU,oBAAoBoB,QAASoC,GAA/C,cAGA,4BAAQxD,UAAU,oBAAoBoB,QAASqC,GAA/C,eAKF,yBAAKzD,UAAWP,EAAQwC,QACtB,kBAAC,EAAD,CAAYN,YAAa4B,SAY7BG,EAAczE,aAAS,YAAgD,IAA7CuD,EAA4C,EAA5CA,OAAQmB,EAAoC,EAApCA,YAChClE,EAAUpB,IAD0D,EAEpCsB,mBAAS,GAF2B,mBAEnEiE,EAFmE,KAEtDC,EAFsD,KAI1E,OACE,yBAAK7D,UAAWP,EAAQ+C,QACtB,yBAAKxC,UAAU,WACb,yBAAKA,UAAU,QAAQwC,EAAOvC,aAC9B,yBAAKD,UAAU,SACb,6BAAMwC,EAAO3B,OACb,6BACE,0BACEX,SAAU,SAAAC,GACRwD,EAAYnB,EAAQoB,GACpBC,EAAe,GACf1D,EAAIC,mBAGN,yBAAKJ,UAAU,oBACb,2BACEK,KAAK,SACLL,UAAU,eACVO,MAAOqD,EACPpD,SAAU,SAAAL,GAAG,OAAI0D,EAAeC,OAAO3D,EAAIM,OAAOF,WAEpD,yBAAKP,UAAU,sBACb,4BACEK,KAAK,SACLL,UAAU,uCAFZ,aAYZ,yBAAKA,UAAU,gBACZ,CAAC,EAAG,GAAI,GAAI,KAAK8B,KAAI,SAAAiC,GAAM,OAC1B,4BACE/B,IAAKgC,OAAOD,GACZ/D,UAAU,8BACVoB,QAAS,kBAAMuC,EAAYnB,EAAQuB,KAElCA,MAGL,yBAAK/D,UAAU,mBC/LViE,EAAQvE,IAAMwE,YACzB,WAAU1B,GAAY,IAAnB2B,EAAkB,EAAlBA,IACKC,EAAU1E,IAAM2E,YAOhBC,EAAO,WACX,IAAMC,EAAQH,EAAQI,QACtBD,EAAME,QACNF,EAAMG,YAAc,GAgBtB,OAJA9C,OAAO+C,OAAOnC,EAAQ,CACpBgC,QAAS,CAAEF,OAAMM,KAVN,WACX,IAAML,EAAQH,EAAQI,QAElBD,IACFD,IACAC,EAAMK,SAKeC,UArBP,WAChB,IAAMN,EAAQH,EAAQI,QACtB,OAAOD,GAASA,EAAMG,YAAc,MAsB/B,2BAAOI,IAAKV,EAASW,QAAQ,OAAOC,UAAU,EAAOb,IAAKA,OCnBxDc,EAAavF,IAAMwE,YAA6B,SAACgB,EAAOJ,GAAS,IAAD,EAC1DpF,IAAMC,UAA2B,kBAC/CiC,OAAOC,KAAKP,GAAkB6D,QAC7B,SAACC,EAAuBrD,GACtB,IAAM+C,EAAMpF,IAAM2E,YAOlB,OANAe,EAAIrD,GAAS,CACX6C,KAAM,kBAAME,EAAIN,SAAWM,EAAIN,QAAQI,QACvCN,KAAM,kBAAMQ,EAAIN,SAAWM,EAAIN,QAAQF,QACvCO,UAAW,kBAAMC,EAAIN,SAAWM,EAAIN,QAAQK,aAC5CQ,UAAW,kBAAM,kBAACpB,EAAD,CAAOa,IAAKA,EAAKX,IAAK7C,EAASS,OAE3CqD,IAET,OAZGnD,EADoE,oBAiBrE2C,EAAOlF,IAAM4F,aACjB,SAACvD,GAAD,OACEH,OAAOC,KAAKI,GACTH,KAAI,SAAAyD,GAAC,OAAIA,KACTC,SAAQ,SAAAC,GACP,IAAMZ,EAAY5C,EAAOwD,GAAMZ,YACzBa,EAAmBD,IAAS1D,EAE9B8C,IACF5C,EAAOwD,GAAMnB,OAEToB,IAMFA,GACFzD,EAAOF,GAAO6C,YAGtB,CAAC3C,IAOH,OAJAL,OAAO+C,OAAOG,EAAK,CACjBN,QAAS,CAAEI,UAIX,oCACGhD,OAAOC,KAAKI,GACVH,KAAI,SAAAyD,GAAC,OAAIA,KACTzD,KAAI,SAAAC,GACH,IAAM4D,EAAY1D,EAAOF,GAAOsD,UAChC,OAAO,kBAACM,EAAD,CAAW3D,IAAKD,WCzD3B6D,EAAe,CACnB,qBACA,mBACA,gBACA,aAoBIvH,EAAYC,YAAgB,CAChCC,UAAW,CACTC,cAAe,MACfG,SAAU,GAEZkH,aAAc,CACZjF,eAAgB,SAChBnC,WAAY,SACZgE,MAAO,sBAETqD,YAAa,CACXrD,MAAO,QACPjE,cAAe,SACfoC,eAAgB,iBAElB4B,OAAQ,CACNhE,cAAe,SACfoC,eAAgB,gBAChBnC,WAAY,SACZsH,gBAAiB,SAACb,GAAD,OACfA,GAASA,EAAMc,iBAAmB,OAAS,WAC7CC,aAAc,MACd3D,QAAS,UACTI,MAAO,SAACwC,GAAD,OACLA,GAASA,EAAMc,iBAAmB,UAAY,QAEhD,WAAY,CACVD,gBAAiB,OACjBrD,MAAO,WAGT,UAAW,CACTwD,WA3CsB,SAAChB,GAC3B,IAAMiB,EAAWjB,GAASA,EAAM1C,QAAU0C,EAAM1C,OAAOY,GAEvD,GAAgB,MAAZ+C,EACF,OAAO,KAGT,IAAM/C,EAAKU,OAAOqC,EAASC,QAAQ,MAAO,KAC1C,OAAOR,EAAaxC,EAAKwC,EAAa7F,SAoClClB,SAjDoB,SAACqG,GACzB,IAAMO,EAAQP,GAASA,EAAM1C,QAAU0C,EAAM1C,OAAOvC,aAAgB,IACpE,MAAM,GAAN,OAAU,IAAoB,GAAdwF,EAAK1F,OAArB,OAkDE,WAAY,CACVlB,SAAU,WAKHwH,EAAmBpH,aAAS,YAA8B,IAA3BC,EAA0B,EAA1BA,SACpCO,EAAUpB,IAEdiI,EAKEpH,EALFoH,eACA/D,EAIErD,EAJFqD,QACmBgE,EAGjBrH,EAHFsH,kBACAhD,EAEEtE,EAFFsE,UACAC,EACEvE,EADFuE,UAGF/D,IAAM+G,WAAU,WACd,IAAMC,EAAkB,SAAC,GAAmC,IAAjC1E,EAAgC,EAAhCA,IAEzB,OADA2E,QAAQC,IAAI,QAAS5E,GACbA,GACN,IAAK,YACHwB,IACA,MACF,IAAK,aACHC,MAMN,OADAoD,SAASC,iBAAiB,UAAWJ,GAC9B,WACLG,SAASE,oBAAoB,UAAWL,MAEzC,CAACjD,EAAWD,IAEf,IAAMwD,EAAatH,IAAM2E,YAQzB,OANA3E,IAAM+G,WAAU,WACdvH,EAAS+H,wBAAuB,SAAAlF,GAC9BiF,EAAWxC,SAAWwC,EAAWxC,QAAQI,KAAK7C,QAE/C,CAAC7C,EAAU8H,IAGZ,yBAAKhH,UAAWP,EAAQlB,WACtB,kBAAC2I,EAAD,CAAcC,MAAOZ,IACrB,kBAACa,EAAD,CAAa7E,QAASA,EAAS+D,eAAgBA,IAC/C,kBAACrB,EAAD,CAAYH,IAAKkC,QASjBE,EAAejI,aAAS,YAAmC,IAAhCkI,EAA+B,EAA/BA,MACzB1H,EAAUpB,IAChB,OACE,yBAAK2B,UAAWP,EAAQoG,cACtB,yBACEwB,IAAG,eAAUF,EAAV,QACHhD,IAAG,uBAAkBgD,EAAlB,QACHG,MAAO,CAAEC,UAAW,iBAUtBH,EAAcnI,aAClB,YAAoD,IAAjDsD,EAAgD,EAAhDA,QAAS+D,EAAuC,EAAvCA,eACJ7G,EAAUpB,IAChB,OACE,yBAAK2B,UAAWP,EAAQqG,aACrBvD,EAAQT,KAAI,SAAAU,GAAM,OACjB,kBAACgF,EAAD,CACExF,IAAKQ,EAAOY,GACZZ,OAAQA,EACRwD,iBAAkBxD,EAAOY,KAAOkD,WAYtCkB,EAAavI,aAAS,YAAoD,IAAjDuD,EAAgD,EAAhDA,OAAQwD,EAAwC,EAAxCA,iBAC/BvG,EAAUpB,EAAU,CAAEmE,WAC5B,OACE,yBAAKxC,UAAWP,EAAQ+C,QAAUwD,EAAmB,UAAY,KAC/D,yBAAKhG,UAAU,QAAQwC,EAAOvC,aAC9B,yBAAKD,UAAU,SAASwC,EAAO3B,W,sGCnKxB4G,EAAb,WACE,WAAqBC,GAA4C,yBAA5CA,cADvB,iDAII,OAAOC,KAAKD,aAAeC,KAAKD,YAAYvE,OAJhD,yBAQI,OAAOwE,KAAKxE,MAAQwE,KAAKxE,KAAKyE,MARlC,kCAYI,OAAOD,KAAKxE,MAAQwE,KAAKxE,KAAKlD,eAZlC,sCA6BI,OAX0B,MAAtB0H,KAAKE,gBACPF,KAAKE,cAAgBC,IAClBC,OACAC,oBACAC,MAAK,SAAAP,GAAW,OAAI,IAAID,EAAaC,MAExCC,KAAKE,cAAcK,OAAM,kBACvBvB,QAAQwB,KAAK,gDAIVR,KAAKE,kBA7BhB,KAAaJ,EAeII,cAAuC,KCfxD,IAAIO,GAAc,EAGZA,IAIJA,GAAc,EAEdN,IAASO,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjBf,IAASgB,aAMIhB,I,qDAAAA,KAAf,ECnBaiB,GAAb,WASE,aAAe,yBAHEC,aAAoD,GAGvD,KAFGC,YAEH,EACZtB,KAAKsB,OAASnB,GAASoB,YAAYC,WAAW,YAVlD,yLAEiBxB,KAAKsB,OAAOG,MAF7B,mBAE6C,SAAAC,GAAG,OAC1C,EAAKJ,OAAOI,IAAIA,EAAIjG,IAAIkG,UAH9B,gBAEoCC,KAAKzH,IAFzC,2JAaa0H,EAAeC,GACxB9B,KAAKsB,OAAOS,IAAI,CAAEF,QAAOG,KAAMF,IAC/B9C,QAAQiD,MAAR,oBAA2BJ,EAA3B,MAAsCC,KAf1C,gCAmBID,EACAK,GAEC,IAAD,OADAC,EACA,wDACIC,EAAcpC,KAAKqB,aAAaQ,GAEjB,MAAfO,IACFA,EAAcpC,KAAKqB,aAAaQ,GAAS,GAEzC7B,KAAKsB,OAAOe,MAAM,QAAS,KAAMR,GAAOS,YAAW,SAAAC,GACjDA,EACGC,aACAC,QAAO,SAAA7E,GAAC,MAAe,UAAXA,EAAElF,QACdmF,SAAQ,SAAAD,GAAM,IACLoE,EAASpE,EAAE8D,IAAIgB,OAAfV,KAER,EAAKX,aAAaQ,GAAOhE,SAAQ,SAAAqE,GAC/B,IACEA,EAAQF,GACR,MAAOW,GACP3D,QAAQwB,KAAK,UAAWmC,OAIxBR,GACF,EAAKb,OAAOI,IAAI9D,EAAE8D,IAAIjG,IAAIkG,gBAMpCS,EAAYQ,KAAKV,MAlDrB,gCAwDI,OAAQlC,KAAK6C,UAAY7C,KAAK6C,WAAa,IAAIzB,MAxDnD,K,+NAAaA,GAqDIyB,e,ECvCV,IAAMC,IAAb,iBAoEE,aAAe,IAAD,gCA7DGC,IAAM3B,GAAW4B,SA6DpB,KA5DNC,eAAuD,KA4DjD,KA3DNC,oBAA4D,KA2DtD,KAzDLtI,QAAUuI,YAAmB,IAyDxB,KAxDLC,MAAQD,YAAmB,IAwDtB,woBAuDL7D,uBAAyB,SAAC4C,GAAD,OAChC,EAAKa,IAAIM,UACP,cACA,gBAAGjJ,EAAH,EAAGA,MAAH,OAAe8H,EAAQ9H,MACvB,IA3DU,kDAiFLmB,UAAY,kBAAM,EAAK+H,kBAAkB,CAAE9L,OAAQ,YAjF9C,KAmFL6D,SAAW,SAACR,GAAD,OAClBA,GAAU,EAAKD,QAAQ2I,WAAU,SAAA3F,GAAC,OAAIA,EAAEnC,KAAOZ,EAAOY,OAAO,GAnF7DuE,KAAKwD,aAELC,aACE,kBAAM,EAAKC,QACX,SAAAA,GACe,cAATA,GACF,EAAKC,yBA3Ef,yDAyBwC,IAAD,OACnC,OAAO3D,KAAKpF,QAAQgJ,MAAK,SAAAhG,GAAC,OAAIA,EAAEnC,KAAO,EAAKkD,oBA1BhD,yCA8BI,OACEqB,KAAKnI,aACLmI,KAAKnI,YAAY4D,KAAOqH,EAASe,cAAcpI,IACf,MAAhCuE,KAAKnI,YAAYS,cAjCvB,uCAqC8C,IAAD,OACnCwL,EAAiB,CAAC9D,KAAK+D,UAAW/D,KAAKgE,WAE7C,OAAOhE,KAAKoD,MACTX,QAAO,SAAA7E,GAAC,QAAMA,KACd6E,QAAO,sBAAGnK,eACVmK,QAAO,gBAAGhH,EAAH,EAAGA,GAAH,OAAaqI,EAAeG,SAASxI,MAC5CgH,QAAO,qBAAGhH,KAAgB,EAAK5D,YAAY4D,QA5ClD,2BAgD0B,IAAD,OACrB,OAAIuE,KAAKnI,YAAY4D,KAAOqH,EAASe,cAAcpI,GAC1C,YAGLuE,KAAKnI,YAAY4D,KAAOuE,KAAK+D,UACxB,YAGL/D,KAAKnI,YAAY4D,KAAOuE,KAAKgE,UACxB,YAGLhE,KAAKpF,QAAQ2I,WAAU,SAAA3F,GAAC,OAAIA,EAAEnC,KAAO,EAAK5D,YAAY4D,OAAO,EACxD,aAGF,gBAjEX,2DA0JiC,IAAD,OACxBuE,KAAKkE,uBAETlE,KAAKkE,sBAAuB,EAE5BlE,KAAK+C,IAAIM,UAAyB,UAAU,YAAmB,IAAhB7E,EAAe,EAAfA,SACzCA,IAAasE,EAASe,cAAcpI,KAEZ,OAAxB,EAAKkD,eACP,EAAK2E,kBAAkB,CAAE3E,eAAgBH,IAChC,EAAKG,iBAAmBH,GAGjCQ,QAAQmF,KAAR,iBAAuB3F,EAAvB,gCAvKR,mKA6KuBsB,EAAasE,eA7KpC,OA6KU5I,EA7KV,OA8KIwE,KAAKtG,OAAS8B,EAAKC,GAEnBuD,QAAQiD,MAAR,6BAAoCjC,KAAKtG,SAEzCsG,KAAKqE,0BAELrE,KAAKsE,wBAELtE,KAAKuE,kBAtLT,8IAyL6B,IAAD,OACxBpE,GACGoB,YACAC,WAAW,SACXc,YAAW,SAAAZ,GACVA,EAAIc,aAAa3E,SAAQ,YAAc,IAAX6D,EAAU,EAAVA,IACpB8C,EAAe,EAAKpB,MAAMQ,MAAK,SAAAhG,GAAC,OAAIA,EAAEnC,KAAOiG,EAAIjG,MAEvDgJ,aAAY,WACND,EACFvK,OAAO+C,OAAOwH,EAAc9C,EAAIgB,QAEhC,EAAKU,MAAMR,KAAKlB,EAAIgB,mBArMlC,gDA4MqC,IAAD,OAChC1C,KAAKiD,eAAiByB,GAAgB1E,KAAKtG,QAE3CsG,KAAKiD,eAAeX,YAClB,SAAAZ,GACE,IAAM7G,EAAS6G,EAAIgB,OAEnB,GAAc,MAAV7H,EAOF,OANAmE,QAAQmF,KAAR,qCAEA,EAAKlB,eAAe0B,IAAI,CAAElJ,GAAI,EAAK/B,QAAoB,CACrDkL,OAAO,IAMX5F,QAAQiD,MAAR,iCAAwC4C,KAAKC,UAAUjK,KAEvD4J,aAAY,WACN,EAAK5M,YAAY4D,KAAOZ,EAAOY,GACjCxB,OAAO+C,OAAO,EAAKnF,YAAagD,GAEhC,EAAKhD,YAAcgD,QAIzB,SAAA8H,GAAK,OAAIoC,MAAM,+BAAD,OAAgCpC,SAvOpD,8KA4OI3C,KAAK+C,IAAIiC,QA5Ob,SA8OqC7E,GAC9BoB,YACAC,WAF8B,YAG9ByD,MAAM,GACNxD,MAlPP,UAoPoC,KAN1ByD,EA9OV,QAoP2BC,KApP3B,uBAqPMJ,MAAM,oCArPZ,0BAyPUK,EAAkBF,EAAmBtD,KAAK,GAAGnG,GAEnDuE,KAAKkD,oBAAsB/C,GACxBoB,YACAG,IAFwB,mBAER0D,IAEnBpF,KAAKkD,oBAAoBZ,YACvB,SAAAZ,GACE,IAAM2D,EAAU3D,EAAIgB,OAEL,MAAX2C,EAKJZ,aAAY,WAAO,IACT7J,EAAsByK,EAAtBzK,QAAY2C,EADJ,YACc8H,EADd,aAGZzK,GACF,EAAKA,QAAQ6D,QAAQ7D,GAGvBX,OAAO+C,OAAO,EAAMO,MAXpByB,QAAQmF,KAAR,0DAcJ,SAAAxB,GAAK,OAAIoC,MAAM,6BAAD,OAA8BpC,OAlRlD,+IAsR4B2C,GACxBtF,KAAKkD,oBAAoByB,IAAIW,EAAQ,CACnCV,OAAO,QAxRb,QACkBf,cAAwB5J,OAAOsL,OAAO,CACpD9J,GAAI,KACJnD,YAAa,YACbkN,KAAM,cAJV,yCAcGrC,KAdH,yEAc+B,QAd/B,uCAeGA,KAfH,yEAekC,QAflC,uCAgBGA,KAhBH,yEAgBkC,QAhBlC,mCAiBGA,KAjBH,wEAiB8B,0BAjB9B,yCAkBGA,KAlBH,yEAkBoCL,GAASe,iBAlB7C,4CAmBGV,KAnBH,yEAmBuC,QAnBvC,gDAoBGA,KApBH,yEAoB0C,KApB1C,6CAqBGA,KArBH,yEAqBuC,MArBvC,qCAsBGA,KAtBH,wEAsBmC,iBAtBnC,mDAuBGA,KAvBH,yEAuB6C,KAvB7C,wCAyBGsC,KAzBH,uHA6BGA,KA7BH,2HAqCGA,KArCH,6GA+CGA,KA/CH,iHAiFGC,KAjFH,oFAkF+B,SAAC7K,EAAgBuB,GAC1B,cAAd,EAAKsH,OACT7I,EAAO3B,OAAS2B,EAAO3B,OAAS,GAAKkD,EACrC,EAAKkH,kBAAkB,CAAE1I,QAAS+K,YAAK,EAAK/K,gBArFhD,iDAwFG8K,KAxFH,oFAyFgC,SAAC7K,GACzBA,EAAOY,KAAOqH,GAASe,cAAcpI,IACzC,EAAKsH,IAAI6C,QAAuB,SAAU,CAAEpH,SAAU3D,EAAOY,SA3FjE,wCA8FGiK,KA9FH,oFA+FuB,SAACtL,GACpB,EAAK2I,IAAI6C,QAA0B,aAAc,CAAExL,cAhGvD,wCAmGGsL,KAnGH,oFAoGuB,WACnB,GAAkB,cAAd,EAAKhC,MAAsC,cAAd,EAAKA,KAAtC,CACA,IAAM7E,EAAoBgH,KAAKC,IAC7B,EAAKC,eACL,EAAKlH,kBAAoB,GAE3B,EAAKyE,kBAAkB,CAAE3E,eAAgB,KAAME,2BA1GnD,wCA6GG6G,KA7GH,oFA8GuB,WACnB,GAAkB,cAAd,EAAKhC,MAAsC,cAAd,EAAKA,KAAtC,CACA,IAAM7E,EAAoBgH,KAAKG,IAAI,EAAG,EAAKnH,kBAAoB,GAC/D,EAAKyE,kBAAkB,CAAEzE,2BAjH7B,2CAoHG6G,KApHH,oFAqH0B,SAACpN,GACvB,EAAK2K,eAAe0B,IAAI,CAAErM,eAAyB,CACjDsM,OAAO,QAvHb,+CAkIGc,KAlIH,oFAmI8B,SAAC7K,GAC3B,GAAkB,cAAd,EAAK6I,KAAT,CAEA,IAAMuC,EAAgB,EAAKrL,QAAQ2I,WAAU,SAAA3F,GAAC,OAAIA,EAAEnC,KAAOZ,EAAOY,MAE9Db,EAAU,EAAKA,QAAQsL,QAEvBD,GAAiB,EACnBrL,EAAQuL,OAAOF,EAAe,GAE9BrL,EAAQgI,K,2VAAR,IAAkB/H,EAAlB,CAA0B3B,MAAO,KAGnC,EAAK0B,QAAQ6D,QAAQ7D,GAErB,EAAK0I,kBAAkB,CAAE1I,QAAS+K,YAAK/K,UAlJ3C,GA6RM8J,GAAkB,SAAChL,GAAD,OACtByG,GAASoB,YAAYG,IAArB,gBAAkChI,KC3S9B0M,I,MAEF,CACFC,WAAYhN,EACZ2K,UAAW/I,EACX8I,UAAWrF,EACX4H,UAAWjP,IAcEkP,GAXHjP,aAAS,WACnB,IAAMkP,EAAQC,aAAc,kBAAM,IAAI3D,MAChC4D,EAAON,GAAOI,EAAM9C,MAE1B,OACE,yBAAKrL,UAAU,OACb,kBAACqO,EAAD,CAAMnP,SAAUiP,QCbFG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAS/H,SAASgI,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,MAAK,SAAAgH,GACjCA,EAAaC,kB","file":"static/js/main.4b302aaa.chunk.js","sourcesContent":["import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { PageProps } from \"../model\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = createUseStyles({\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  content: {\n    flexDirection: \"column\",\n    flexGrow: 4\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: \"200%\",\n    fontWeight: 800,\n    textAlign: \"center\"\n  }\n});\n\nexport const AnonymousPage = observer(({ appState }: PageProps) =>\n  appState.status === \"registering\" ? (\n    <AnonymousRegistrationView appState={appState} />\n  ) : (\n    <AnonymousActiveGameView />\n  )\n);\n\nconst AnonymousActiveGameView = observer(() => <div>Game in progress...</div>);\n\nconst AnonymousRegistrationView = observer(\n  ({\n    appState: { title, isRegisteredPlayer, registerUser, localPlayer }\n  }: PageProps) => {\n    const classes = useStyles();\n    const [playerName, setPlayerName] = React.useState(\"\");\n    const canSubmit = (playerName || \"\").length > 3;\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.title}>{title}</div>\n        <div className={classes.content}>\n          {isRegisteredPlayer ? (\n            <div>\n              <div>Welcome, {localPlayer.displayName}!</div>\n              <div>The game will begin shortly...</div>\n            </div>\n          ) : (\n            <>\n              <div>Please sign in:</div>\n              <form\n                onSubmit={evt => {\n                  evt.preventDefault();\n\n                  if (canSubmit) {\n                    registerUser(playerName);\n                  }\n                }}\n              >\n                <input\n                  type=\"text\"\n                  placeholder=\"What's your name?\"\n                  value={playerName}\n                  onChange={evt => setPlayerName(evt.target.value)}\n                />\n                <button disabled={!canSubmit} className=\"btn btn-primary\">\n                  Register\n                </button>\n              </form>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { PageProps } from \"../model\";\nimport { createUseStyles } from \"react-jss\";\nimport { observer } from \"mobx-react-lite\";\n\nconst useStyles = createUseStyles({\n  container: {\n    flexGrow: 1,\n    flexDirection: \"column\"\n  },\n  playerDetails: {\n    flexGrow: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  playerName: {\n    fontSize: \"200%\"\n  },\n  score: {\n    fontSize: \"150%\"\n  },\n  buzzer: {\n    flexGrow: 4,\n    fontVariant: \"all-small-caps\",\n    fontSize: \"400%\"\n  }\n});\n\nexport const ContestantPage = observer(({ appState }: PageProps) =>\n  appState.status === \"registering\" ? (\n    <RegisteredContestantView appState={appState} />\n  ) : (\n    <ActiveContestantView appState={appState} />\n  )\n);\n\nexport const RegisteredContestantView = observer(\n  ({ appState: { localPlayer, title } }: PageProps) => (\n    <>\n      <div>\n        Congratulations, {localPlayer.displayName}, you're a contestant on\n        <span>{title}</span>!\n      </div>\n      <div>Hold tight - the game will begin shortly!</div>\n    </>\n  )\n);\n\nexport const ActiveContestantView = observer(\n  ({ appState, appState: { localPlayer, contestantBuzzedIn } }: PageProps) => {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.playerDetails}>\n          <div className={classes.playerName}>{localPlayer.displayName}</div>\n          <div className={classes.score}>{localPlayer.score}</div>\n        </div>\n        <button\n          className={classes.buzzer + \" btn btn-secondary\"}\n          onClick={() => contestantBuzzedIn(localPlayer)}\n        >\n          Buzz\n        </button>\n        <small>\n          <em>User ID: {appState.userId}</em>\n        </small>\n      </div>\n    );\n  }\n);\n","export const SoundMap = {\n  Right: \"/sfx/right.mp3\",\n  Wrong: \"/sfx/wrong.mp3\",\n  Waiting: \"/sfx/theme.mp3\",\n  \"Time's Up\": \"/sfx/times-up.mp3\"\n};\n\nexport type SoundName = keyof typeof SoundMap;\n\nexport interface AudioPlayer {\n  play(): void;\n  stop(): void;\n  isPlaying(): boolean;\n}\n\nexport interface SoundMixerPlayer {\n  play(sound: SoundName): void;\n}\n","import React from \"react\";\nimport { SoundMap, SoundName } from \"./model\";\n\nexport interface SoundBoardProps {\n  onPlaySound(sound: SoundName): void;\n}\n\nexport const SoundBoard = ({ onPlaySound }: SoundBoardProps) => (\n  <div>\n    {(Object.keys(SoundMap) as any).map((sound: SoundName) => (\n      <button\n        key={sound}\n        className=\"btn btn-primary\"\n        onClick={() => onPlaySound(sound)}\n      >\n        {sound}\n      </button>\n    ))}\n  </div>\n);\n","import React, { useState } from \"react\";\nimport { Player, PageProps } from \"../model\";\nimport { SoundBoard } from \"../sounds/SoundBoard\";\nimport { observer } from \"mobx-react-lite\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  sounds: {\n    flexGrow: 2,\n    flexDirection: \"row\",\n    justifyItems: \"space-between\",\n\n    \"& .btn\": {\n      flexGrow: 1,\n      margin: \"0.5em\"\n    }\n  },\n\n  slideButtons: {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: \"0.5rem\",\n\n    \"& .btn\": {\n      padding: \"1em 1.5em\"\n    }\n  },\n\n  players: {\n    flexGrow: 3,\n    flexDirection: \"column\"\n  },\n\n  player: {\n    flexDirection: \"column\",\n    marginBottom: \"1rem\",\n\n    \"& .name\": {\n      flexGrow: 1,\n      fontWeight: 700,\n      fontSize: \"200%\"\n    },\n\n    \"& .score\": {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      width: \"30%\",\n      color: \"#1050db\",\n      fontWeight: 600\n    },\n\n    \"& .scoreActions\": {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n\n    \"& .scoreActions .btn\": {\n      padding: \"2em 1em\",\n      minWidth: \"5em\"\n    },\n\n    \"& .scoreActions input\": {\n      width: \"3em\"\n    }\n  }\n});\n\nexport const ModeratorPage = observer(({ appState }: PageProps) => {\n  return appState.status === \"registering\" ? (\n    <ModerateRegistrationView appState={appState} />\n  ) : (\n    <ModerateActiveGameView appState={appState} />\n  );\n});\n\nconst ModerateRegistrationView = observer(\n  ({\n    appState: { playerCandidates, isPlayer, toggleContestant, startGame }\n  }: PageProps) => (\n    <>\n      <h3>Select Contestants</h3>\n      <ul className=\"list-group\">\n        {playerCandidates.map(user => (\n          <li\n            key={user.id}\n            className={\n              \"list-group-item list-group-item-action \" +\n              (isPlayer(user) ? \" active\" : \"\")\n            }\n            onClick={() => toggleContestant(user)}\n          >\n            {user.displayName} <small>({user.id.substr(0, 5)})</small>\n          </li>\n        ))}\n      </ul>\n\n      <div>\n        <button className=\"btn btn-primary\" onClick={() => startGame()}>\n          Start Game!\n        </button>\n      </div>\n    </>\n  )\n);\n\nconst ModerateActiveGameView = observer(\n  ({\n    appState: { players, addPointsToPlayer, playSound, prevSlide, nextSlide }\n  }: PageProps) => {\n    const classes = useStyles();\n\n    return (\n      <>\n        <div className={classes.players}>\n          {players.map(player => (\n            <PlayerScore\n              key={player.id}\n              player={player}\n              onAddPoints={addPointsToPlayer}\n            />\n          ))}\n        </div>\n\n        <div className={classes.slideButtons}>\n          <button className=\"btn btn-secondary\" onClick={prevSlide}>\n            Prev Slide\n          </button>\n          <button className=\"btn btn-secondary\" onClick={nextSlide}>\n            Next Slide\n          </button>\n        </div>\n\n        <div className={classes.sounds}>\n          <SoundBoard onPlaySound={playSound} />\n        </div>\n      </>\n    );\n  }\n);\n\ninterface PlayerScoreProps {\n  player: Player;\n  onAddPoints(player: Player, points: number): void;\n}\n\nconst PlayerScore = observer(({ player, onAddPoints }: PlayerScoreProps) => {\n  const classes = useStyles();\n  const [customScore, setCustomScore] = useState(0);\n\n  return (\n    <div className={classes.player}>\n      <div className=\"details\">\n        <div className=\"name\">{player.displayName}</div>\n        <div className=\"score\">\n          <div>{player.score}</div>\n          <div>\n            <form\n              onSubmit={evt => {\n                onAddPoints(player, customScore);\n                setCustomScore(0);\n                evt.preventDefault();\n              }}\n            >\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={customScore}\n                  onChange={evt => setCustomScore(Number(evt.target.value))}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-secondary addPoints\"\n                  >\n                    Add\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"scoreActions\">\n        {[5, 25, 50, 100].map(points => (\n          <button\n            key={String(points)}\n            className=\"btn btn-secondary addPoints\"\n            onClick={() => onAddPoints(player, points)}\n          >\n            {points}\n          </button>\n        ))}\n        <div className=\"addPoints\"></div>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { AudioPlayer } from \"./model\";\n\nexport const Sound = React.forwardRef<AudioPlayer, { src: string }>(\n  ({ src }, player) => {\n    const audioEl = React.createRef<HTMLAudioElement>();\n\n    const isPlaying = () => {\n      const audio = audioEl.current;\n      return audio && audio.currentTime > 0;\n    };\n\n    const stop = () => {\n      const audio = audioEl.current;\n      audio.pause();\n      audio.currentTime = 0;\n    };\n\n    const play = () => {\n      const audio = audioEl.current;\n\n      if (audio) {\n        stop();\n        audio.play();\n      }\n    };\n\n    Object.assign(player, {\n      current: { stop, play, isPlaying }\n    });\n\n    return <audio ref={audioEl} preload=\"auto\" autoPlay={false} src={src} />;\n  }\n);\n","import React from \"react\";\nimport { SoundMap, SoundName, SoundMixerPlayer, AudioPlayer } from \"./model\";\nimport { Sound } from \"./Sound\";\n\nexport interface SoundMixerProps {\n  onPlaySound(sound: SoundName): void;\n}\n\ntype SoundMixerSounds = {\n  [key in SoundName]: AudioPlayer & { component: React.FunctionComponent };\n};\n\nexport const SoundMixer = React.forwardRef<SoundMixerPlayer>((props, ref) => {\n  const [sounds] = React.useState<SoundMixerSounds>(() =>\n    (Object.keys(SoundMap) as any).reduce(\n      (agg: SoundMixerSounds, sound: SoundName) => {\n        const ref = React.createRef<AudioPlayer>();\n        agg[sound] = {\n          play: () => ref.current && ref.current.play(),\n          stop: () => ref.current && ref.current.stop(),\n          isPlaying: () => ref.current && ref.current.isPlaying(),\n          component: () => <Sound ref={ref} src={SoundMap[sound]} />\n        };\n        return agg;\n      },\n      {} as SoundMixerSounds\n    )\n  );\n\n  const play = React.useCallback(\n    (sound: SoundName) =>\n      Object.keys(sounds)\n        .map(x => x as SoundName)\n        .forEach(name => {\n          const isPlaying = sounds[name].isPlaying();\n          const isRequestedSound = name === sound;\n\n          if (isPlaying) {\n            sounds[name].stop();\n\n            if (isRequestedSound) {\n              // stop - don't play\n              return;\n            }\n          }\n\n          if (isRequestedSound) {\n            sounds[sound].play();\n          }\n        }),\n    [sounds]\n  );\n\n  Object.assign(ref, {\n    current: { play }\n  });\n\n  return (\n    <>\n      {Object.keys(sounds)\n        .map(x => x as SoundName)\n        .map(sound => {\n          const Component = sounds[sound].component;\n          return <Component key={sound} />;\n        })}\n    </>\n  );\n});\n","import React from \"react\";\nimport { Player, PageProps } from \"../model\";\nimport { observer } from \"mobx-react-lite\";\nimport { createUseStyles } from \"react-jss\";\nimport { SoundMixer, SoundMixerPlayer } from \"../sounds\";\n\nconst fontFamilies = [\n  \"Cedarville Cursive\",\n  \"Permanent Marker\",\n  \"Reenie Beanie\",\n  \"Rock Salt\"\n  //\"Ruge Boogie\"\n];\n\nconst getPlayerFontSize = (props: { player: Player }) => {\n  const name = (props && props.player && props.player.displayName) || \"x\";\n  return `${300 - name.length * 20}%`;\n};\n\nconst getPlayerFontFamily = (props: { player: Player }) => {\n  const playerId = props && props.player && props.player.id;\n\n  if (playerId == null) {\n    return null;\n  }\n\n  const id = Number(playerId.replace(/\\D/g, \"\"));\n  return fontFamilies[id % fontFamilies.length];\n};\n\nconst useStyles = createUseStyles({\n  container: {\n    flexDirection: \"row\",\n    flexGrow: 1\n  },\n  currentSlide: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"calc(100% - 13rem)\"\n  },\n  playersList: {\n    width: \"13rem\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  player: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: (props: PlayerViewProps) =>\n      props && props.isBuzzedInPlayer ? \"gold\" : \"#060CE9\",\n    borderRadius: \"10%\",\n    padding: \"1em 2em\",\n    color: (props: PlayerViewProps) =>\n      props && props.isBuzzedInPlayer ? \"#060CE9\" : \"#fff\",\n\n    \"&.buzzed\": {\n      backgroundColor: \"gold\",\n      color: \"#060CE9\"\n    },\n\n    \"& .name\": {\n      fontFamily: getPlayerFontFamily,\n      fontSize: getPlayerFontSize\n    },\n\n    \"& .score\": {\n      fontSize: \"150%\"\n    }\n  }\n});\n\nexport const PresentationPage = observer(({ appState }: PageProps) => {\n  const classes = useStyles();\n  const {\n    buzzedPlayerId,\n    players,\n    currentQuestionId: currentQuestion,\n    prevSlide,\n    nextSlide\n  } = appState;\n\n  React.useEffect(() => {\n    const keyPressHandler = ({ key }: { key: string }): any => {\n      console.log(\"key: \", key);\n      switch (key) {\n        case \"ArrowLeft\":\n          prevSlide();\n          break;\n        case \"ArrowRight\":\n          nextSlide();\n          break;\n      }\n    };\n\n    document.addEventListener(\"keydown\", keyPressHandler);\n    return () => {\n      document.removeEventListener(\"keydown\", keyPressHandler);\n    };\n  }, [nextSlide, prevSlide]);\n\n  const soundMixer = React.createRef<SoundMixerPlayer>();\n\n  React.useEffect(() => {\n    appState.subscribeToSoundEvents(sound => {\n      soundMixer.current && soundMixer.current.play(sound);\n    });\n  }, [appState, soundMixer]);\n\n  return (\n    <div className={classes.container}>\n      <CurrentSlide slide={currentQuestion} />\n      <PlayersList players={players} buzzedPlayerId={buzzedPlayerId} />\n      <SoundMixer ref={soundMixer} />\n    </div>\n  );\n});\n\ninterface CurrentSlideProps {\n  slide: number;\n}\n\nconst CurrentSlide = observer(({ slide }: CurrentSlideProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.currentSlide}>\n      <img\n        alt={`Slide${slide}.jpg`}\n        src={`/slides/Slide${slide}.jpg`}\n        style={{ objectFit: \"contain\" }}\n      />\n    </div>\n  );\n});\n\ninterface PlayersListProps {\n  players: Player[];\n  buzzedPlayerId: string;\n}\nconst PlayersList = observer(\n  ({ players, buzzedPlayerId }: PlayersListProps) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.playersList}>\n        {players.map(player => (\n          <PlayerView\n            key={player.id}\n            player={player}\n            isBuzzedInPlayer={player.id === buzzedPlayerId}\n          />\n        ))}\n      </div>\n    );\n  }\n);\n\ninterface PlayerViewProps {\n  player: Player;\n  isBuzzedInPlayer: boolean;\n}\nconst PlayerView = observer(({ player, isBuzzedInPlayer }: PlayerViewProps) => {\n  const classes = useStyles({ player });\n  return (\n    <div className={classes.player + (isBuzzedInPlayer ? \" buzzed\" : \"\")}>\n      <div className=\"name\">{player.displayName}</div>\n      <div className=\"score\">{player.score}</div>\n    </div>\n  );\n});\n","import firebase from \"firebase\";\n\nexport class FirebaseUser {\n  constructor(readonly credentials: firebase.auth.UserCredential) {}\n\n  get user() {\n    return this.credentials && this.credentials.user;\n  }\n\n  get id(): string {\n    return this.user && this.user.uid;\n  }\n\n  get displayName(): string {\n    return this.user && this.user.displayName;\n  }\n\n  private static _loginRequest: Promise<FirebaseUser> = null;\n\n  static authenticate(): Promise<FirebaseUser> {\n    if (this._loginRequest == null) {\n      this._loginRequest = firebase\n        .auth()\n        .signInAnonymously()\n        .then(credentials => new FirebaseUser(credentials));\n\n      this._loginRequest.catch(() =>\n        console.warn(\"Unable to authenticate as anonymous user\")\n      );\n    }\n\n    return this._loginRequest;\n  }\n}\n","import firebase from \"firebase\";\n\nlet initialized = false;\n\nfunction initializeFirebase(): void {\n  if (initialized) {\n    return;\n  }\n\n  initialized = true;\n\n  firebase.initializeApp({\n    apiKey: \"AIzaSyCIw3Il1zFwzWQNONEPpNB5ydnTIYy3mso\",\n    authDomain: \"quizshow-bbe75.firebaseapp.com\",\n    databaseURL: \"https://quizshow-bbe75.firebaseio.com\",\n    projectId: \"quizshow-bbe75\",\n    storageBucket: \"quizshow-bbe75.appspot.com\",\n    messagingSenderId: \"770561928281\",\n    appId: \"1:770561928281:web:66942fd2a6b357f9b15548\",\n    measurementId: \"G-BST52BZV8G\"\n  });\n\n  firebase.analytics();\n}\n\ninitializeFirebase();\n\nexport * from \"./FirebaseUser\";\nexport default firebase;\n","import firebase from \"./firebase\";\n\ntype MessageHandler<T = any> = (message: T) => void;\n\ninterface Message<T = any> {\n  topic: string;\n  body: T;\n}\n\nexport class MessageBus {\n  async clear() {\n    await (await this._queue.get()).docs.map(doc =>\n      this._queue.doc(doc.id).delete()\n    );\n  }\n  private readonly _subscribers: { [key: string]: MessageHandler[] } = {};\n  private readonly _queue: firebase.firestore.CollectionReference;\n\n  constructor() {\n    this._queue = firebase.firestore().collection(\"messages\");\n  }\n\n  publish<T>(topic: string, message: T) {\n    this._queue.add({ topic, body: message } as Message);\n    console.debug(`Published ${topic}: `, message);\n  }\n\n  subscribe<T>(\n    topic: string,\n    handler: MessageHandler<T>,\n    deleteAfterHandled = false\n  ) {\n    let subscribers = this._subscribers[topic];\n\n    if (subscribers == null) {\n      subscribers = this._subscribers[topic] = [];\n\n      this._queue.where(\"topic\", \"==\", topic).onSnapshot(snap => {\n        snap\n          .docChanges()\n          .filter(x => x.type === \"added\")\n          .forEach(x => {\n            const { body } = x.doc.data();\n\n            this._subscribers[topic].forEach(handler => {\n              try {\n                handler(body);\n              } catch (error) {\n                console.warn(\"Error: \", error);\n              }\n            });\n\n            if (deleteAfterHandled) {\n              this._queue.doc(x.doc.id).delete();\n            }\n          });\n      });\n    }\n\n    subscribers.push(handler);\n  }\n\n  private static _instance: MessageBus;\n\n  public static get Instance() {\n    return (this._instance = this._instance || new MessageBus());\n  }\n}\n","import {\n  observable,\n  action,\n  computed,\n  runInAction,\n  toJS,\n  reaction\n} from \"mobx\";\nimport { Player, PlayerMode } from \"./model\";\nimport firebase, { FirebaseUser } from \"./firebase\";\nimport { MessageBus } from \"./MessageBus\";\nimport { SoundName } from \"./sounds\";\n\ntype GameStatus = \"registering\" | \"active\" | \"done\";\n\ninterface BuzzerMessage {\n  playerId: string;\n}\n\ninterface PlaySoundMessage {\n  sound: SoundName;\n}\n\nexport class AppState {\n  static readonly AnonymousUser: Player = Object.freeze({\n    id: \"-1\",\n    displayName: \"Anonymous\",\n    role: \"spectator\"\n  });\n\n  private readonly bus = MessageBus.Instance;\n  private playerDocument: firebase.firestore.DocumentReference = null;\n  private gameSessionDocument: firebase.firestore.DocumentReference = null;\n\n  readonly players = observable<Player>([]);\n  readonly users = observable<Player>([]);\n\n  @observable userId: string = null;\n  @observable presenter: string = null;\n  @observable moderator: string = null;\n  @observable title: string = \"JavaScript Quiz Show\";\n  @observable localPlayer: Player = AppState.AnonymousUser;\n  @observable buzzedPlayerId: string = null;\n  @observable currentQuestionId: number = 1;\n  @observable totalQuestions: number = 36;\n  @observable status: GameStatus = \"registering\";\n  @observable private presenterInitialized = false;\n\n  @computed get buzzedPlayer(): Player {\n    return this.players.find(x => x.id === this.buzzedPlayerId);\n  }\n\n  @computed get isRegisteredPlayer(): boolean {\n    return (\n      this.localPlayer &&\n      this.localPlayer.id !== AppState.AnonymousUser.id &&\n      this.localPlayer.displayName != null\n    );\n  }\n\n  @computed get playerCandidates(): Player[] {\n    const specialUserIds = [this.presenter, this.moderator];\n\n    return this.users\n      .filter(x => !!x)\n      .filter(({ displayName }) => !!displayName)\n      .filter(({ id }) => !specialUserIds.includes(id))\n      .filter(({ id }) => id !== this.localPlayer.id);\n  }\n\n  @computed\n  get mode(): PlayerMode {\n    if (this.localPlayer.id === AppState.AnonymousUser.id) {\n      return \"spectator\";\n    }\n\n    if (this.localPlayer.id === this.presenter) {\n      return \"presenter\";\n    }\n\n    if (this.localPlayer.id === this.moderator) {\n      return \"moderator\";\n    }\n\n    if (this.players.findIndex(x => x.id === this.localPlayer.id) >= 0) {\n      return \"contestant\";\n    }\n\n    return \"spectator\";\n  }\n\n  constructor() {\n    this.initialize();\n\n    reaction(\n      () => this.mode,\n      mode => {\n        if (mode === \"presenter\") {\n          this.initializePresenter();\n        }\n      }\n    );\n  }\n\n  @action\n  readonly addPointsToPlayer = (player: Player, points: number) => {\n    if (this.mode !== \"moderator\") return;\n    player.score = (player.score || 0) + points;\n    this.updateGameSession({ players: toJS(this.players) });\n  };\n\n  @action\n  readonly contestantBuzzedIn = (player: Player) => {\n    if (player.id === AppState.AnonymousUser.id) return;\n    this.bus.publish<BuzzerMessage>(\"buzzer\", { playerId: player.id });\n  };\n\n  @action\n  readonly playSound = (sound: SoundName) => {\n    this.bus.publish<PlaySoundMessage>(\"play_sound\", { sound });\n  };\n\n  @action\n  readonly nextSlide = () => {\n    if (this.mode !== \"moderator\" && this.mode !== \"presenter\") return;\n    const currentQuestionId = Math.min(\n      this.totalQuestions,\n      this.currentQuestionId + 1\n    );\n    this.updateGameSession({ buzzedPlayerId: null, currentQuestionId });\n  };\n\n  @action\n  readonly prevSlide = () => {\n    if (this.mode !== \"moderator\" && this.mode !== \"presenter\") return;\n    const currentQuestionId = Math.max(1, this.currentQuestionId - 1);\n    this.updateGameSession({ currentQuestionId });\n  };\n\n  @action\n  readonly registerUser = (displayName: string) => {\n    this.playerDocument.set({ displayName } as Player, {\n      merge: true\n    });\n  };\n\n  readonly subscribeToSoundEvents = (handler: (sound: SoundName) => void) =>\n    this.bus.subscribe<PlaySoundMessage>(\n      \"play_sound\",\n      ({ sound }) => handler(sound),\n      true\n    );\n\n  @action\n  readonly toggleContestant = (player: Player) => {\n    if (this.mode !== \"moderator\") return;\n\n    const existingIndex = this.players.findIndex(x => x.id === player.id);\n\n    let players = this.players.slice();\n\n    if (existingIndex > -1) {\n      players.splice(existingIndex, 1);\n    } else {\n      players.push({ ...player, score: 0 });\n    }\n\n    this.players.replace(players);\n\n    this.updateGameSession({ players: toJS(players) as any });\n  };\n\n  readonly startGame = () => this.updateGameSession({ status: \"active\" });\n\n  readonly isPlayer = (player: Player) =>\n    player && this.players.findIndex(x => x.id === player.id) >= 0;\n\n  private initializePresenter() {\n    if (this.presenterInitialized) return;\n\n    this.presenterInitialized = true;\n\n    this.bus.subscribe<BuzzerMessage>(\"buzzer\", ({ playerId }) => {\n      if (playerId === AppState.AnonymousUser.id) return;\n\n      if (this.buzzedPlayerId === null) {\n        this.updateGameSession({ buzzedPlayerId: playerId });\n      } else if (this.buzzedPlayerId === playerId) {\n        // you already buzzed in!!\n      } else {\n        console.info(`Player ${playerId} buzzed in too late!`);\n      }\n    });\n  }\n\n  private async initialize() {\n    const user = await FirebaseUser.authenticate();\n    this.userId = user.id;\n\n    console.debug(`Authenticated user ${this.userId}`);\n\n    this.initializeCurrentPlayer();\n\n    this.initializeGameSession();\n\n    this.initializeUsers();\n  }\n\n  private initializeUsers() {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .onSnapshot(doc => {\n        doc.docChanges().forEach(({ doc }) => {\n          const existingUser = this.users.find(x => x.id === doc.id);\n\n          runInAction(() => {\n            if (existingUser) {\n              Object.assign(existingUser, doc.data());\n            } else {\n              this.users.push(doc.data() as Player);\n            }\n          });\n        });\n      });\n  }\n\n  private initializeCurrentPlayer() {\n    this.playerDocument = getUserDocument(this.userId);\n\n    this.playerDocument.onSnapshot(\n      doc => {\n        const player = doc.data() as Player;\n\n        if (player == null) {\n          console.info(`Registering as new player...`);\n\n          this.playerDocument.set({ id: this.userId } as Player, {\n            merge: true\n          });\n\n          return;\n        }\n\n        console.debug(`Found existing player: ${JSON.stringify(player)}`);\n\n        runInAction(() => {\n          if (this.localPlayer.id === player.id) {\n            Object.assign(this.localPlayer, player);\n          } else {\n            this.localPlayer = player;\n          }\n        });\n      },\n      error => alert(`Error retrieving user info: ${error}`)\n    );\n  }\n\n  private async initializeGameSession() {\n    this.bus.clear();\n\n    const activeSessionQuery = await firebase\n      .firestore()\n      .collection(`sessions`)\n      .limit(1)\n      .get();\n\n    if (activeSessionQuery.size === 0) {\n      alert(\"Couldn't find an active session!\");\n      return;\n    }\n\n    const activeSessionId = activeSessionQuery.docs[0].id;\n\n    this.gameSessionDocument = firebase\n      .firestore()\n      .doc(`sessions/${activeSessionId}`);\n\n    this.gameSessionDocument.onSnapshot(\n      doc => {\n        const session = doc.data();\n\n        if (session == null) {\n          console.info(`Ignoring null session (this should never happen...)`);\n          return;\n        }\n\n        runInAction(() => {\n          const { players, ...props } = session;\n\n          if (players) {\n            this.players.replace(players);\n          }\n\n          Object.assign(this, props);\n        });\n      },\n      error => alert(`Error retrieving session: ${error}`)\n    );\n  }\n\n  private updateGameSession(update: Partial<AppState>): void {\n    this.gameSessionDocument.set(update, {\n      merge: true\n    });\n  }\n}\n\nconst getUserDocument = (userId: string) =>\n  firebase.firestore().doc(`users/${userId}`);\n","import React, { FunctionComponent } from \"react\";\nimport { AnonymousPage } from \"./pages/AnonymousPage\";\nimport { ContestantPage } from \"./pages/ContestantPage\";\nimport { ModeratorPage } from \"./pages/ModeratorPage\";\nimport { PresentationPage } from \"./pages/PresentationPage\";\nimport { AppState } from \"./AppState\";\nimport { useLocalStore, observer } from \"mobx-react-lite\";\nimport \"./App.scss\";\nimport { PageProps, PlayerMode } from \"./model\";\n\nconst routes: {\n  [key in PlayerMode]: FunctionComponent<PageProps>;\n} = {\n  contestant: ContestantPage,\n  moderator: ModeratorPage,\n  presenter: PresentationPage,\n  spectator: AnonymousPage\n};\n\nconst App = observer(() => {\n  const state = useLocalStore(() => new AppState());\n  const View = routes[state.mode];\n\n  return (\n    <div className=\"App\">\n      <View appState={state} />\n    </div>\n  );\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}